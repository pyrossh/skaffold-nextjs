---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: postgres
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  pg_hba.conf: |
    host all all 0.0.0.0/0 md5
  postgresql.conf: |
    data_directory = '/var/lib/postgresql/data'
    listen_addresses = '*'
    # DB Version: 15
    # OS Type: linux
    # DB Type: web
    # Total Memory (RAM): 1 GB
    # CPUs num: 1
    # Connections num: 50
    # Data Storage: ssd
    max_connections = 50
    shared_buffers = 256MB
    effective_cache_size = 768MB
    maintenance_work_mem = 64MB
    checkpoint_completion_target = 0.9
    wal_buffers = 7864kB
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    work_mem = 2621kB
    min_wal_size = 1GB
    max_wal_size = 4GB
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-volume
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data2"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:14
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - name: postgredb
              mountPath: /var/lib/postgresql/data
            # - name: config
            #   mountPath: /var/lib/postgresql/postgresql.conf
            #   subPath: postgresql.conf
            # - name: config
            #   mountPath: /var/lib/postgresql/pg_hba.conf
            #   subPath: pg_hba.conf
          # args:
          #   - "-c"
          #   - "config_file=/var/lib/postgresql/postgresql.conf"
          #   - "-c"
          #   - "hba_file=/var/lib/postgresql/pg_hba.conf"
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
        - name: config
          configMap:
            name: postgres-config
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  selector:
    app: postgres
  ports:
    - name: postgres
      protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tcp-services
  namespace: ingress-nginx
data:
  5433: "default/postgres:5432"

# apiVersion: batch/v1beta1
# kind: CronJob
# metadata:
#   name: postgres-backup
# spec:
#   schedule: "*/1 * * * *"
#   jobTemplate:
#     spec:
#       template:
#         spec:
#           containers:
#           - name: postgres-backup
#             image: google/cloud-sdk:alpine
#             args:
#             - apk --update add postgresql
#             - pg_dump -u myblog > myblog-$(date +%s).bak
#             - gsutil cp myblog.bak gs://myblog/backups
#             envFrom:
#             - secretRef:
#                 name: postres-secrets
#             - configMapRef:
#                 name: postgres-configmap
#             volumeMounts:
#             - name: postgres-database-storage
#               mountPath: /var/lib/pgsql/data
#           volumes:
#           - name: postgres-database-storage
#             persistentVolumeClaim:
#               claimName: postgres-pv-claim         

# Todo create another cron job to monitor backups